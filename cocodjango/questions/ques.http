# Base URL: http://127.0.0.1:8000/api

############################################
## EducationalOrganizationsCategory Tests ##
############################################

### 1) LIST Categories (GET all)
GET {{base_url}}/categories/
Authorization: token {{token}}
Content-Type: application/json

### 2) CREATE a new Category (POST)
POST {{base_url}}/categories/
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Universities",
  "description": "All public and private universities"
}

### 3) GET a single Category by ID
GET {{base_url}}/categories/1
Authorization: token {{token}}
Content-Type: application/json

### 4) UPDATE Category by ID (PUT)
PUT {{base_url}}/categories/1
Authorization: token {{token}}
Content-Type: application/json

{
  "description": "Updated category description"
}

### 5) DELETE Category by ID
DELETE {{base_url}}/categories/1
Authorization: token {{token}}
Content-Type: application/json


#########################################
## EducationalOrganizations Tests ##
#########################################

### 6) LIST Organizations (GET all)
GET {{base_url}}/organizations/
Authorization: token {{token}}
Content-Type: application/json

### 7) CREATE a new Organization (POST)
POST {{base_url}}/organizations/
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Dhaka University",
  "under_category": 1,
  "web_address": "https://du.ac.bd",
  "statement": "Top public university in Bangladesh",
  "document": null,
  "status": true,
  "address_line1": "Administrative Office",
  "address_line2": "Nilkhet Rd",
  "division": 1,
  "district": "Dhaka",
  "postal_code": "1000",
  "first_name": "Registrar",
  "middle_name": "",
  "last_name": "",
  "email": "info@du.ac.bd"
}

### 8) GET a single Organization by ID
GET {{base_url}}/organizations/1
Authorization: token {{token}}
Content-Type: application/json

### 9) UPDATE an Organization by ID (PUT)
PUT {{base_url}}/organizations/1
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Dhaka University - Updated",
  "district": "Dhaka South"
}

### 10) DELETE Organization by ID
DELETE {{base_url}}/organizations/1
Authorization: token {{token}}
Content-Type: application/json

###
# 1. List all educational organizations
GET {{base_url}}/educational_organizations/
Authorization: token {{token}}

###

# 2. Retrieve a single educational organization by ID
GET {{base_url}}/educational_organizations/1/
Authorization: token {{token}}

###

# 3. Create a new educational organization
POST {{base_url}}/educational_organizations/
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Comilla University",
  "under_category": 1,
  "web_address": "https://www.cu.ac.bd",
  "statement": "A renowned public university in Comilla.",
  "document": null,
  "status": true,
  "address_line1": "Main Campus",
  "address_line2": "Kotbari, Comilla",
  "division": 1,
  "district": "Comilla",
  "postal_code": "3506",
  "first_name": "John",
  "last_name": "Doe",
  "email": "contact@cu.ac.bd",
  "created_by": 1
}

###

# 4. Update an educational organization (PUT replaces all fields)
PUT {{base_url}}/educational_organizations/1/
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Comilla University Updated",
  "under_category": 1,
  "web_address": "https://www.cu.ac.bd",
  "statement": "Updated statement.",
  "document": 2,
  "status": false,
  "address_line1": "Updated Address Line 1",
  "address_line2": "Updated Address Line 2",
  "division": 3,
  "district": "Comilla",
  "postal_code": "3506",
  "first_name": "Jane",
  "last_name": "Doe",
  "email": "updated@cu.ac.bd",
  "created_by": 1
}

###

# 5. Partially update an educational organization (PATCH updates specific fields)
PATCH {{base_url}}/educational_organizations/1/
Authorization: token {{token}}
Content-Type: application/json

{
  "name": "Comilla University (Updated)"
}

###

# 6. Delete an educational organization
DELETE {{base_url}}/educational_organizations/1/
Authorization: token {{token}}

###

# 7. List all questions
GET {{base_url}}/questions/
Authorization: token {{token}}

###

# 8. Retrieve a single question by ID
GET {{base_url}}/questions/1/
Authorization: token {{token}}

###

# 9. Create a new question
POST {{base_url}}/questions/
Authorization: token {{token}}
Content-Type: application/json

{
  "question_text": "What is the capital of Bangladesh?",
  "explanation": "The capital is Dhaka.",
  "correct_answer": "Dhaka",
  "question_level": 1,
  "target_organization": 2,
  "target_group": 1,
  "target_subject": 1,
  "question_type": 1,
  "topic": 1,
  "sub_topic": 1,
  "sub_sub_topic": null,
  "exam_references": [1, 2],
  "question_status": 1,
  "difficulty_level": 2
}

###

# 10. Update a question (PUT)
PUT {{base_url}}/questions/1/
Authorization: token {{token}}
Content-Type: application/json

{
  "question_text": "Updated: What is the capital of Bangladesh?",
  "explanation": "Dhaka is the capital city.",
  "correct_answer": "Dhaka",
  "question_level": 1,
  "target_organization": 1,
  "target_group": 1,
  "target_subject": 1,
  "question_type": 1,
  "topic": 1,
  "sub_topic": 1,
  "sub_sub_topic": null,
  "exam_references": [1, 2],
  "question_status": 1,
  "difficulty_level": 2
}

###

# 11. Partially update a question (PATCH)
PATCH {{base_url}}/questions/1/
Authorization: token {{token}}
Content-Type: application/json

{
  "question_text": "Partially Updated: What is the capital of Bangladesh?"
}

###

# 12. Delete a question
DELETE {{base_url}}/questions/1/
Authorization: token {{token}}

###

###
# 1) CREATE a QuestionLevel
###
POST {{base_url}}/question-levels/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Beginner Level"
}

###
# 2) CREATE a DifficultyLevel
###
POST {{base_url}}/difficulty-levels/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Medium Difficulty"
}

###
# 3) CREATE a QuestionStatus
###
POST {{base_url}}/question-statuses/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Approved"
}

###
# 4) CREATE a QuestionType
###
POST {{base_url}}/question-types/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Multiple Choice"
}

###
# 5) CREATE an Organization
###
POST {{base_url}}/organizations/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Sample Organization"
}

###
# 6) CREATE a Group
###
POST {{base_url}}/target-groups/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Sample Group"
}

###
# 7) CREATE a Subject
###
POST {{base_url}}/subjects/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "General Knowledge"
}

###
# 8) CREATE a Topic
###
POST {{base_url}}/topics/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Geography"
}

###
# 9) CREATE a SubTopic
###
POST {{base_url}}/subtopics/
Authorization: Token {{token}}
Content-Type: application/json

{
  "name": "Asian Countries",
  "topic": 1
}

###
# 10) CREATE two ExamReferences (IDs 1 & 2)
###
# 10a) First exam reference
POST {{base_url}}/exam-references/
Authorization: Token {{token}}
Content-Type: application/json

{
  "reference_name": "Reference One"
}

### 10b) Second exam reference

POST {{base_url}}/exam-references/
Authorization: Token {{token}}
Content-Type: application/json

{
  "reference_name": "Reference Two"
}

###
# At this point, you have created many resources
# with (likely) incremental primary keys, e.g.:
# question-levels → pk=1
# difficulty-levels → pk=1
# question-statuses → pk=1
# question-types → pk=1
# organizations → pk=1
# groups → pk=1
# subjects → pk=1
# topics → pk=1
# sub-topics → pk=1
# exam-references → pk=1,2
#
# We’ll confirm their actual PKs from responses or
# by GET calls if needed.
# Now let's POST a question referencing them.
###

###
# 11) CREATE a Question referencing the above objects
###
POST {{base_url}}/questions/
Authorization: Token {{token}}
Content-Type: application/json

{
  "question_text": "What is the capital of Bangladesh?",
  "explanation": "The capital is Dhaka.",
  "correct_answer": "Dhaka",
  "question_level": 1,
  "target_organization": 2,
  "target_group": 1,
  "target_subject": 1,
  "question_type": 1,
  "topic": 1,
  "sub_topic": 1,
  "sub_sub_topic": null,
  "exam_references": [1, 2],
  "question_status": 1,
  "difficulty_level": 1
}

