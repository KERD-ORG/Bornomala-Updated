# Generated by Django 5.0.3 on 2025-01-01 09:35

import django.db.models.deletion
import phonenumber_field.modelfields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('campus_app', '0001_initial'),
        ('college_app', '0001_initial'),
        ('common', '0001_initial'),
        ('department_app', '0001_initial'),
        ('educational_organizations_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalUserDetails',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('city_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('country_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('other_languages', models.CharField(blank=True, max_length=255, null=True)),
                ('military_status', models.JSONField(blank=True, null=True)),
                ('parental_college_graduation_status', models.BooleanField(default=False)),
                ('hispanic_latino_origin', models.BooleanField(blank=True, null=True)),
                ('citizenship_status', models.JSONField(blank=True, null=True)),
                ('country_of_citizenship', models.CharField(blank=True, max_length=255, null=True)),
                ('dual_citizenship', models.BooleanField(default=False)),
                ('legal_state_of_residence', models.CharField(blank=True, max_length=100, null=True)),
                ('visa_status', models.CharField(blank=True, max_length=255, null=True)),
                ('current_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('current_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('current_city', models.CharField(max_length=255, null=True)),
                ('current_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('current_country', models.CharField(max_length=2, null=True)),
                ('permanent_address_status', models.BooleanField(default=False)),
                ('permanent_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_city', models.CharField(max_length=255, null=True)),
                ('permanent_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('permanent_country', models.CharField(max_length=2, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=255, null=True)),
                ('ethnicity_details', models.CharField(blank=True, max_length=255, null=True)),
                ('ethnicity_origin', models.BooleanField(default=False)),
                ('ethnicity_reporting', models.BooleanField(default=False)),
                ('currently_enrolled', models.BooleanField(default=False)),
                ('emergency_fname', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_lname', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_city', models.TextField(blank=True, null=True)),
                ('emergency_state', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_country', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('emergency_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('acknowledgement', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='campus_app.campus')),
                ('college', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='college_app.college')),
                ('current_state_province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.state')),
                ('department', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='department_app.department')),
                ('first_language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.language')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='educational_organizations_app.educationalorganizations')),
                ('permanent_state_province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.state')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user details',
                'verbose_name_plural': 'historical user detailss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('city_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('country_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('other_languages', models.CharField(blank=True, max_length=255, null=True)),
                ('military_status', models.JSONField(blank=True, null=True)),
                ('parental_college_graduation_status', models.BooleanField(default=False)),
                ('hispanic_latino_origin', models.BooleanField(blank=True, null=True)),
                ('citizenship_status', models.JSONField(blank=True, null=True)),
                ('country_of_citizenship', models.CharField(blank=True, max_length=255, null=True)),
                ('dual_citizenship', models.BooleanField(default=False)),
                ('legal_state_of_residence', models.CharField(blank=True, max_length=100, null=True)),
                ('visa_status', models.CharField(blank=True, max_length=255, null=True)),
                ('current_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('current_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('current_city', models.CharField(max_length=255, null=True)),
                ('current_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('current_country', models.CharField(max_length=2, null=True)),
                ('permanent_address_status', models.BooleanField(default=False)),
                ('permanent_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_city', models.CharField(max_length=255, null=True)),
                ('permanent_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('permanent_country', models.CharField(max_length=2, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=255, null=True)),
                ('ethnicity_details', models.CharField(blank=True, max_length=255, null=True)),
                ('ethnicity_origin', models.BooleanField(default=False)),
                ('ethnicity_reporting', models.BooleanField(default=False)),
                ('currently_enrolled', models.BooleanField(default=False)),
                ('emergency_fname', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_lname', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_city', models.TextField(blank=True, null=True)),
                ('emergency_state', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_country', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('emergency_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('acknowledgement', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campus_app.campus')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='college_app.college')),
                ('current_state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_state', to='common.state')),
                ('custom_groups', models.ManyToManyField(blank=True, related_name='user_details', to='common.customgroup')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='department_app.department')),
                ('first_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.language')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='educational_organizations_app.educationalorganizations')),
                ('permanent_state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permanent_state', to='common.state')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainingWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('organizer', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('certificate', models.TextField()),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_workshops', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('test_name', models.CharField(choices=[('IELTS', 'IELTS'), ('TOEFL', 'TOEFL'), ('SAT', 'SAT'), ('GRE', 'GRE'), ('DUOLINGO', 'DUOLINGO'), ('PTE', 'PTE')], max_length=100)),
                ('score', models.FloatField()),
                ('date_taken', models.DateField()),
                ('verified', models.BooleanField(default=False)),
                ('user_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.userdocument')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_score', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('skill_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.skilloptions')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='ResearchInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('research_interests_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.researchinterestoptions')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_interests', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'Research Interest',
                'verbose_name_plural': 'Research Interests',
            },
        ),
        migrations.CreateModel(
            name='ResearchExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('supervisor', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_experiences', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(choices=[('Dr.', 'Dr.'), ('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.'), ('Prof.', 'Prof.')], max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('organization_name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email_address', models.EmailField(max_length=100)),
                ('relationship', models.CharField(max_length=100)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'Reference',
                'verbose_name_plural': 'References',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('publication_type', models.CharField(choices=[('journal', 'Journal'), ('workshop', 'Workshop'), ('conference', 'Conference')], max_length=20)),
                ('authors', models.TextField()),
                ('publication_date', models.DateField()),
                ('abstract', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('doi_link', models.URLField(max_length=255)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorkExperience',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('position_title', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description_of_duties', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical work experience',
                'verbose_name_plural': 'historical work experiences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVolunteerActivity',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('organization_name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('role_description', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical volunteer activity',
                'verbose_name_plural': 'historical volunteer activitys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVisa',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('visa_type', models.CharField(max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('state_province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.state')),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical visa',
                'verbose_name_plural': 'historical visas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTrainingWorkshop',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('organizer', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('certificate', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical training workshop',
                'verbose_name_plural': 'historical training workshops',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestScore',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('test_name', models.CharField(choices=[('IELTS', 'IELTS'), ('TOEFL', 'TOEFL'), ('SAT', 'SAT'), ('GRE', 'GRE'), ('DUOLINGO', 'DUOLINGO'), ('PTE', 'PTE')], max_length=100)),
                ('score', models.FloatField()),
                ('date_taken', models.DateField()),
                ('verified', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_document', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.userdocument')),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical test score',
                'verbose_name_plural': 'historical test scores',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSkill',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('skill_option', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.skilloptions')),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical Skill',
                'verbose_name_plural': 'historical Skills',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalResearchInterest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('research_interests_option', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.researchinterestoptions')),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical Research Interest',
                'verbose_name_plural': 'historical Research Interests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalResearchExperience',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('supervisor', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical research experience',
                'verbose_name_plural': 'historical research experiences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReferenceInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(choices=[('Dr.', 'Dr.'), ('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.'), ('Prof.', 'Prof.')], max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('organization_name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email_address', models.EmailField(max_length=100)),
                ('relationship', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical Reference',
                'verbose_name_plural': 'historical References',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublication',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=255)),
                ('publication_type', models.CharField(choices=[('journal', 'Journal'), ('workshop', 'Workshop'), ('conference', 'Conference')], max_length=20)),
                ('authors', models.TextField()),
                ('publication_date', models.DateField()),
                ('abstract', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('doi_link', models.URLField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical publication',
                'verbose_name_plural': 'historical publications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEducationalBackground',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('institution_name', models.CharField(max_length=255)),
                ('institution_address', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('degree_expected', models.BooleanField(default=False)),
                ('degree_date', models.DateField(blank=True, null=True)),
                ('major', models.CharField(max_length=255)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical educational background',
                'verbose_name_plural': 'historical educational backgrounds',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDissertation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=255)),
                ('academic_level', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('abstract', models.TextField()),
                ('publications', models.TextField()),
                ('full_dissertation_link', models.URLField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical dissertation',
                'verbose_name_plural': 'historical dissertations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCitizenship',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('state_province', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='common.state')),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical Citizenship',
                'verbose_name_plural': 'historical Citizenships',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAwardGrantScholarship',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('awarding_organization', models.CharField(max_length=255)),
                ('date_received', models.DateField()),
                ('description', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'historical award grant scholarship',
                'verbose_name_plural': 'historical award grant scholarships',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EducationalBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('institution_name', models.CharField(max_length=255)),
                ('institution_address', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('degree_expected', models.BooleanField(default=False)),
                ('degree_date', models.DateField(blank=True, null=True)),
                ('major', models.CharField(max_length=255)),
                ('rank', models.PositiveIntegerField(default=0)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_histories', to='profile_app.userdetails')),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Dissertation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('academic_level', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('abstract', models.TextField()),
                ('publications', models.TextField()),
                ('full_dissertation_link', models.URLField(max_length=255)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dissertations', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Citizenship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citizenship_state', to='common.state')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citizenships', to='profile_app.userdetails')),
            ],
            options={
                'verbose_name': 'Citizenship',
                'verbose_name_plural': 'Citizenships',
            },
        ),
        migrations.CreateModel(
            name='AwardGrantScholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('awarding_organization', models.CharField(max_length=255)),
                ('date_received', models.DateField()),
                ('description', models.TextField()),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards_grants_scholarships', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visa_type', models.CharField(max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visa_state', to='common.state')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visas', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VolunteerActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization_name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('role_description', models.TextField()),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_activities', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('position_title', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description_of_duties', models.TextField()),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='profile_app.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
